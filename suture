#!/usr/bin/env python

# Copyright (c) 2014 The MITRE Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

#suture

"""
Program to merge pcaps and output to a file or stdin

Release Notes:
suture v.01
    First Release
suture v.02
    Added automatic endian detection
    Removed endian options -l/-b


TODO
    Consider using 3rd party library for pcap header processing

"""

#VERSION .02
import sys
import os
import struct
from optparse import OptionParser

sys.path.append(os.path.realpath(os.path.dirname(os.path.realpath(sys.argv[0]))) + '/shop')

from ChopSuture import Suture


def main():
    optparser = OptionParser()
    optparser.add_option("-o","--output",action="store",
            dest="output",type="string",help="Output to file (or '-' for stdout)")
    optparser.add_option("-v","--verbose",action="store_true",
            dest="verbose",default=False,help="Be verbose when reading files")


    (options,args) = optparser.parse_args()


    try:
        lines = sys.stdin.readlines()
    except Exception, e:
        sys.exit("Error getting files from stdin\n")

    if not options.output:
        sys.stderr.write("Output location required")
        sys.exit()

    suture = Suture(lines,options.verbose,options.output)
    suture.process_files()


if __name__ == '__main__':
    main()
